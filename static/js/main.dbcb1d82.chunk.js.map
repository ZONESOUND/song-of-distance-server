{"version":3,"sources":["socketUsage.js","config.js","sound.js","sketch.js","firebase.js","ControlPanel.js","App.js","index.js","sound/C3_mid_long_44.1k.mp3","sound/C2_low_short_44.1k.mp3"],"names":["socket","io","isSocketConnect","on","console","log","reverb","comp","samplerLong","finalFilter","emitOSC","address","value","emit","args","noteNumber","Tone","Frequency","toFrequency","noteSynth","notePlaying","initSound","limiter","Limiter","toMaster","Compressor","connect","ratio","Reverb","pre_delay","decay","wet","generate","Filter","rolloff","initNote","C3","Sampler","attack","C2","i","genSineSynth","ind","Synth","oscillator","type","envelope","sustain","release","decayCurve","sketch","p","radioDeg","lastRadioDeg","allDataPoint","dataPoint","configData","enableUpdate","lightCounter","rDistArr","setup","createCanvas","windowWidth","windowHeight","frameRate","windowResized","resizeCanvas","myCustomRedrawAccordingToNewPropsHandler","props","calcRdistArr","Object","keys","length","forEach","e","updateDataPoint","dataPointMap","pos","obj","lon","lat","globalScale","result","createVector","x","Math","pow","abs","globalPow","y","getPos","dist","mag","toFixed","deg","heading","PI","degree","num","int","frameCount","slice","map","filter","maxLineLength","calcR","draw","radioSpeed","background","textSize","fill","stroke","strokeWeight","text","calcPerson","leave","calcActive","push","textLeading","Date","height","pop","drawText","translate","width","noFill","r","max","sin","noise","beginShape","LINES","o","useR","calcWaveR","vertex","cos","radians","endShape","noStroke","CLOSE","ellipse","drawCircle","lastTrigger","eid","angleDelta","timeDelta","now","timeStamp","dataDegree","nowId","showId","scanned","d2","JSON","stringify","id","key","data","time_to_now_second","useAngle","scanAfter","rect","textWidth","min","rectMode","CENTER","rotate","drawDataPoint","line","drawSwipeLine","centerName","drawCenter","textAlign","drawMapFrame","sec","getSeconds","drawSecRect","mult","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","earthLocRef","ref","child","LocData","state","gp","gpsPermission","first","allLocations","updateDataSet","checkData","setState","entries","d","set","getShowId","remove","setInterval","snapshot","val","this","Component","ControlPanel","GUI","dat","saveControlData","sessionStorage","setItem","dataStore","getItem","parse","btn","add","close","split","ch","charCodeAt","reduce","a","b","App","React","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.dbcb1d82.chunk.js","sourcesContent":["import io from 'socket.io-client';\nimport {serverIP} from './config';\n\nconst socket = io(serverIP);\nlet isSocketConnect = false;\nsocket.on('connect', () => {\n    isSocketConnect = true;\n    console.log('socket connect to server');\n})\n\nexport let emitOSC = (address, value)=> {\n    socket.emit('osc', {\n        address: address,\n        args: [{\n            value: value\n        }]\n    });\n}\n\nexport let receiveOSC = (func) => {\n    socket.on('osc', func);\n}\n\nexport {isSocketConnect};","export const firebaseConfig = {\n    apiKey: \"AIzaSyAldF3HRwUKCpzSid5MFtEEakwNYg12M6I\",\n    authDomain: \"song-of-distance-47ab8.firebaseapp.com\",\n    databaseURL: \"https://song-of-distance-47ab8.firebaseio.com\",\n    projectId: \"song-of-distance-47ab8\",\n    storageBucket: \"song-of-distance-47ab8.appspot.com\",\n    messagingSenderId: \"807349511024\",\n    appId: \"1:807349511024:web:bfabe2b53857e837d665b5\",\n    measurementId: \"G-6D96Y0D4KW\"\n};\n/*export const firebaseConfig = {\n    //put firebase config here\n    apiKey: \"AIzaSyBlfFaGBx7B_nBnlR29yhJAr6kPjqAdLfo\",\n    authDomain: \"test-84ae7.firebaseapp.com\",\n    databaseURL: \"https://test-84ae7.firebaseio.com\",\n    projectId: \"test-84ae7\",\n    storageBucket: \"test-84ae7.appspot.com\",\n    messagingSenderId: \"762464277938\"\n};*/\nexport const serverIP = 'https://gps-250305.appspot.com'; // change IP here\n//https://gps-250305.appspot.com\n","import Tone from 'tone';\nimport C3 from './sound/C3_mid_long_44.1k.mp3';\nimport C2 from './sound/C2_low_short_44.1k.mp3';\n\nlet mode = 3; \n//let octave = 'CDEFGAB'; //start from index 1 so put C at second \nlet octave = ['C', 'D', 'Eb', 'F', 'G', 'A', 'Bb'];\nlet octaveStart = 2;\nlet octaveMax = 5;\n\nlet startFreq = Tone.Frequency('F3').toFrequency();\nlet noteBetween = 5;\nlet noteNumber = 9;\n\nlet layerInner = 2;\nlet layerOuter = 15;\n\nlet noteDuration = 200;\nlet synth, reverb, comp, samplerLong, samplerShort, finalFilter;\nlet noteTimeout = {};\nlet noteSynth = {};\nlet notePlaying = {};\n\nexport let initSound = () => {\n    var limiter = new Tone.Limiter(-0.5).toMaster();\n    comp = new Tone.Compressor(-30, 3).connect(limiter); \n    comp.ratio.value = 20;   \n    reverb = new Tone.Reverb({\n        pre_delay: 0.05,\n        decay: 5,\n        wet: 0.6,\n    }).connect(comp);\n    reverb.generate();\n    finalFilter = new Tone.Filter(6000, 'lowpass');\n    finalFilter.rolloff = -12;\n    finalFilter.connect(reverb);\n    if (mode === 0) noteNumber = octave.length*(octaveMax-octaveStart+1);\n    initNote();\n    console.log('sample here', C3);\n    samplerLong = new Tone.Sampler({\n        \"C3\" : C3,\n        //\"C2\" : C2,\n    }, function() {\n      console.log('sample load!');\n      samplerLong.attack = 0.25;\n      //samplerLong.triggerAttack(\"D3\");\n    }).connect(finalFilter);\n    samplerShort = new Tone.Sampler({\n        \"C2\" : C2,\n    }, function() {\n      console.log('short sample load!');\n      //sampler.triggerAttack(\"D3\");\n    }).connect(finalFilter);\n    //return;\n    // synth = new Tone.Synth({\n    //     oscillator : {type:'sine'} ,\n    //     envelope : {\n    //         attack: 0.1 ,\n    //         decay: 0.1 ,\n    //         sustain: 0.2 ,\n    //         release: 0.5\n    //     }});\n        //.chain(filter, reverb);\n}\n\nlet initNote = () => {\n    for (let i=0; i<noteNumber; i++) {\n        genSineSynth(i);\n        notePlaying[i] = false;\n        //genFMSynth(i);\n    }\n    \n}\n\n\nlet genSineSynth = (ind) => {\n    noteSynth[ind] = new Tone.Synth({\n        oscillator : {type:'sine'} ,\n        envelope : {\n            attack: 0.1 ,\n            decay: 5 ,\n            sustain: 0.15 ,\n            release: 0.5\n        }});\n    noteSynth[ind].envelope.decayCurve = 'exponential';\n}\n\nlet genFMSynth = (ind) => {\n    noteSynth[ind] = new Tone.FMSynth({envelope:{\n        attack: 0.1 ,\n        decay: 5 ,\n        sustain: 0.2 ,\n        release: 0.5\n    }});\n    noteSynth[ind].envelope.decayCurve = 'exponential';\n}\n\nexport let triggerSound = (d) => {\n\n    let layer = Math.ceil(d.layer);\n    let dis = Math.max(0.5, layer - d.layer);\n    layer = scaleNumber(layer);\n    let note = 0;\n    let freq = 0;\n    switch (mode) {\n        case 0:\n            note = getNote(layer);\n            freq = Tone.Frequency(note).toFrequency()*0.8*dis;\n            break;\n        case 1:\n            note = getFreq(layer);\n            freq = note*0.8*dis;\n            break;\n        case 2:\n            note = getFreq(layer);\n            freq = note*0.8*dis;\n            break;\n        case 3:\n            note = getNote(layer);\n            freq = Tone.Frequency(note).toFrequency()*dis;\n            break;\n        default:\n            break;\n    }\n    //let note = getFreq(layer);\n    //let freq = note*0.8*dis;\n    let filter = new Tone.Filter(freq, 'lowpass');\n    filter.Q.value = 2;\n\n    if (d.leave !== true) {\n        //mode ? note : Tone.Frequency(note)\n        if (mode >= 2) {\n            console.log('~')\n            samplerLong.connect(filter).triggerAttack(note); \n        }\n        else triggerActive(note);\n        //triggerMetal(mode ? note : Tone.Frequency(note), dis*200+600, 12);\n        return;\n    }\n    \n    if (mode >= 2) {\n        if (notePlaying[layer]) return;\n        notePlaying[layer] = true;\n        samplerShort.connect(filter).triggerAttack(note);\n        setTimeout(()=>{\n            notePlaying[layer] = false;\n        }, noteDuration);\n        return;\n    }\n    \n    if (d.layer <= layerInner) {\n        if (mode >= 2) samplerShort.triggerAttack(note);\n        else {\n            let membrane = new Tone.MembraneSynth ({\n                pitchDecay  : 0.001 ,\n                octaves  : 2,\n                oscillator  : {\n                type  : 'sine'\n                }  ,\n                envelope  : {\n                attack  : 0.1 ,\n                decay  : 0.5 ,\n                sustain  : 0.05 ,\n                release  : 1.4 ,\n                attackCurve  : 'exponential'\n                }\n                }).chain(finalFilter);\n                //d.layer*Tone.Frequency('C4')\n            membrane.triggerAttackRelease(note, 1);\n        }\n\n        return;\n    }\n    // if (d.layer > layerOuter) {\n    //     let env = new Tone.AmplitudeEnvelope({\n    //         attack: 0.4,\n    //             attackCurve: 'sine',\n    //             decay: 0,\n    //             sustain: 1,\n    //             release: 0.5,\n    //             releaseCurve: 'sine'\n    //       }).toMaster();\n          \n    //       let osci = new Tone.FatOscillator({\n    //         type: 'sine',\n    //         spread: 20,\n    //         count: 10,\n    //       }).start().connect(env);\n    //       osci.freq = note;\n    //       env.triggerAttackRelease(1);\n    //     return;\n    // }\n    if (noteTimeout[layer]) {\n        clearTimeout(noteTimeout[layer]);\n        setTimeout(()=>{setRelease(layer)}, noteDuration);\n        return;\n    }\n    \n    console.log(layer, note, freq);\n    //freq\n    \n    // var fmSynth = new Tone.FMSynth().chain(filter, reverb, comp);\n    // fmSynth.triggerAttackRelease(note, 0.15);\n    setAttackRelease(filter, layer, note);\n\n    \n    \n}\n\nlet triggerActive = (note) => {\n    let synth = new Tone.PolySynth(5, Tone.Synth, {\n        oscillator : {\n            type: 'sawtooth',\n            partials : [1, 0.34, 0.67, 1],\n            partialCounts: 5,\n        },\n        envelop: {\n          attack: 0.01,\n          decay: 1.2,\n          decayCurve: 'exponential',\n          sustain: 0,\n          release: 0.3\n        }\n    }).connect(finalFilter);\n    synth.triggerAttackRelease(note, noteDuration/1000);\n}\n\nlet triggerMetal = (frequency, resonance, harmonicity) => {\n    // frequency = Math.max(Math.min(100, frequency), Tone.Frequency('C6'));\n    // let metal = new Tone.MetalSynth({\n    //     frequency  : frequency,\n    //     envelope  : {\n    //     attack  : 0.01 ,\n    //     decay  : 0.4 ,\n    //     release  : 0.2\n    //     },\n    //     harmonicity  : harmonicity,\n    //     modulationIndex  : 20,\n    //     resonance  : resonance,\n    //     octaves  : 1.5\n    //     }\n    // ).connect(reverb);\n    // metal.envelope.decayCurve = 'exponential';\n    // metal.triggerAttackRelease(0.4);\n    \n}\n\nlet setAttackRelease = (filter, ind, note) => {\n    //(noteSynth[note].chain(filter, reverb, comp)).triggerAttack(note);\n    (noteSynth[ind].chain(filter,finalFilter)).triggerAttack(note);\n    noteTimeout[ind] = setTimeout(()=>{\n        setRelease(ind);\n    }, noteDuration);\n}\n\nlet setRelease = (ind) => {\n    noteSynth[ind].triggerRelease();\n    noteTimeout[ind] = null;\n}\n\nlet scaleNumber = (number) => {\n    number = Math.floor(Math.pow(number, 1/1) + Math.floor(Math.random()*3) -1) - 1;\n    return Math.max(Math.min(number, noteNumber-1), 0);\n    //not sure if i need to use max(..,0);\n}\n\nlet getNote = (number) => {\n    let len = octave.length;\n    return octave[number%len]+\n        Math.min(octaveMax, Math.floor(octaveStart+number/len));\n}\n\nlet getFreq = (number) => {\n    return calculateFreq(startFreq, number*noteBetween);\n}\n\nlet calculateFreq = (freq, half) => {\n    return freq * Math.pow(2, half/12.0);\n}\n\nexport let makesound = () => {\n    let temp = new Tone.Synth().toMaster();\n    temp.volume.value = -60;\n    temp.triggerAttackRelease('C4', '16n');\n}","import {receiveOSC, emitOSC, isSocketConnect} from './socketUsage';\nimport {initSound, triggerSound} from './sound';\n//import {earthLocRef} from './firebase';\n\nexport default function sketch (p) {\n    let radioDeg = 0;\n    let lastRadioDeg = 0;\n    let allDataPoint = [];\n    let dataPoint = [];\n    let configData = {};\n    let enableUpdate = true;\n    let lightCounter = 0;\n    let rDistArr = [];\n    let myId;\n    let testBtn;\n\n    // receiveOSC((data)=>{\n    //     if (data.address == '/gps/trigger'){\n    //         let scanId = JSON.parse(data.args[0].value).id\n    //         if (scanId == myId){\n    //             lightCounter = 0;\n    //         }\n    //     }\n    // });\n\n    p.setup = () => {\n        p.createCanvas(p.windowWidth, p.windowHeight);\n        p.frameRate(30);\n        console.log('issocketConnect:' + isSocketConnect);\n        initSound();\n        // for test\n        // testBtn = p.createButton('yo');\n        // testBtn.position(19, 19);\n        // testBtn.mousePressed(()=>{\n        //     triggerSound({layer:30, leave: false});\n        // })\n    };\n\n    p.windowResized = () =>  {\n        p.resizeCanvas(p.windowWidth, p.windowHeight);\n    }\n\n    p.myCustomRedrawAccordingToNewPropsHandler = (props) => {\n        if (props.configData) {\n            configData = props.configData;\n            calcRdistArr();\n        }\n        if (props.dataPoint && Object.keys(configData).length !== 0){\n            allDataPoint = props.dataPoint;\n            allDataPoint.forEach(e => {\n                //console.log(e.showId);\n                if (!e) console.log('sth wrong?');\n            })\n            updateDataPoint();\n        }\n    };\n\n    let dataPointMap = (e) => {\n        let pos = getPos(p, configData, e);\n        let dist = pos.mag().toFixed(5)*1.0;\n        let deg = (pos.heading()/Math.PI*180).toFixed(5)*1.0;\n        return {...e, pos: pos, dist: dist, degree: deg}\n    }\n\n    let updateDataPoint = () => {\n        let num = p.int(p.frameCount / 4);\n        //console.log(num);\n        if (num) {\n            //let threshold = calcR(10, configData.globalScale, configData.globalPow);\n            dataPoint = allDataPoint.slice(-num).map(dataPointMap).filter((e) => e.dist < configData.maxLineLength);\n        }\n        enableUpdate = num > allDataPoint.length ? false : true;\n    }\n\n    let calcRdistArr = () => {\n        for (let i=0; i<50; i++) {\n            rDistArr[i] = calcR(i, configData.globalScale, configData.globalPow);\n        }\n    }\n\n\n    p.draw = function () {\n        if (p.frameCount % 25 === 0 && enableUpdate){\n            updateDataPoint();\n        }\n        lastRadioDeg = radioDeg;\n        radioDeg = calcDeg(configData.radioSpeed, p.frameCount);\n\n        //emit radio\n        if (p.frameCount % 10 === 0)\n            emitOSC('/gps/radio', (radioDeg/Math.PI*180).toFixed(5)*1.0)\n\n        lightCounter++;\n        p.background(255/lightCounter, 100);\n        p.textSize(12)\n        p.fill(255)\n        p.stroke(255,10)\n        p.strokeWeight(1)\n        \n        let text = `Total Nodes: ${calcPerson(dataPoint)}\\nActive: ${calcActive(dataPoint)}\\nExecute Time: ${p.frameCount}\\nScanning: ${(radioDeg/Math.PI*180).toFixed(2)}°`\n        drawText(p, text);\n        //將繪製點移動到畫布中央\n        p.translate(p.width/2, p.height/2);\n        drawCircle(p, rDistArr);\n        drawDataPoint(p, dataPoint, radioDeg, lastRadioDeg, configData);\n        \n        p.noFill()\n        drawSwipeLine(p, radioDeg);\n        drawCenter(p, configData.centerName);\n        drawMapFrame(p);\n        drawSecRect(p);\n    };\n};\n\nfunction drawSecRect(p) {\n    let sec = new Date().getSeconds();\n    p.fill(255);\n    p.rect(-p.width/2+(sec % 5)*30+20,p.height/2-75,25,6);\n    p.stroke(255);\n    p.noFill();\n    p.rect(-p.width/2+( (sec+1) % 5)*30+20,p.height/2-75,25,6);\n}\n\nfunction drawMapFrame(p) {\n    p.push();\n        p.stroke(255,255);\n        p.strokeWeight(10);\n        p.rect(-p.width/2,-p.height/2, p.width, p.height);\n        p.strokeWeight(1);\n        p.stroke(255,30);\n        \n        p.rect(-p.width/2+10,-p.height/2+10, p.width-20, p.height-20);\n    \n        p.stroke(255,255);\n        p.strokeWeight(2);\n        p.line(-p.width/2,0,-p.width/2+20,0);\n        p.line(p.width/2,0,p.width/2-20,0);\n    \n        p.line(0,-p.height/2,0,-p.height/2+20);\n        p.line(0,p.height/2,0,p.height/2-20);\n    \n        p.noStroke();\n        p.fill(255,200);\n        p.textAlign(p.CENTER);\n        p.text('W',-p.width/2+20+15,5);\n        p.text('E',p.width/2-20-15,5);\n        p.text('N',0,-p.height/2+20+20);\n        p.text('S',0,p.height/2-20-10);\n    p.pop();\n}\n\nfunction drawCenter(p, centerName) {\n    p.push();\n        p.fill(\"#f24\");\n        p.noStroke();\n        p.ellipse(0,0,8,8);\n        p.rectMode(p.CENTER);\n        p.stroke(255);\n        p.noFill();\n        p.strokeWeight(2);\n        p.rect(0,0,20,20);\n    \n    \n        p.rotate(p.frameCount/100);\n        p.stroke(255,20);\n        p.rect(0,0,20,20);\n    p.pop();\n\n    p.push();\n        p.fill(255,200);\n        p.text(centerName, 20, 12);\n    p.pop();\n}\n\nfunction drawSwipeLine(p, radioDeg) {\n    p.push()\n        p.stroke(255,200)\n        p.strokeWeight(2)\n        p.line(0,0,Math.cos(radioDeg)*1000, Math.sin(radioDeg)*1000)\n        p.noStroke()\n        let degSpan = 20\n        for(var i=0;i < degSpan;i++){\n            p.fill(255,50/ degSpan*(degSpan-i) )\n            p.beginShape()\n            p.vertex(0,0)\n            p.vertex(Math.cos(radioDeg-0.02*(i-1))*1000,Math.sin(radioDeg-0.02*(i-1))*1000)\n            p.vertex(Math.cos(radioDeg-0.02*i)*1000,Math.sin(radioDeg-0.02*i)*1000)\n            p.endShape(p.CLOSE)\n        }\n    p.pop()\n}\n\nfunction drawDataPoint(p, dataPoint, radioDeg, lastRadioDeg, configData) {\n    p.textSize(12)\n    p.fill(255)\n    p.stroke(255,10)\n    p.strokeWeight(1)\n    let lastTrigger;\n    dataPoint.forEach(( e, eid)=>{\n        let timeDelta = Date.now()- e.timeStamp;\n        let dataDegree = e.pos.heading();\n        let angleDelta = -1000\n        let nowId = e.showId;\n        if (!e.pos) {\n            console.log('no position?');\n            return;\n        }\n        angleDelta = dataDegree - radioDeg;\n        let scanned = ((lastRadioDeg - dataDegree) * (radioDeg - dataDegree) <= 0)\n                        && Math.abs(lastRadioDeg - radioDeg) < 1;\n        \n        if (scanned){\n            if (lastTrigger !== e){\n                //console.log(e);\n                let d2 = JSON.stringify({\n                    degree: e.degree,\n                    dist: e.dist,\n                    id: e.key,\n                    data: e.data,\n                    leave: e.leave,\n                    timeStamp: e.timeStamp,\n                    time_to_now_second: timeDelta,\n                })               \n                // let d = {  \n                //     //layer: Math.ceil(Math.pow(e.dist/0.5, 1/configData.globalPow)*10/configData.globalScale),\n                //     //layer: Math.ceil(Math.pow(e.dist/0.5, 1/configData.globalPow)*10/configData.globalScale),\n                //     layer: calcReverseR(e.dist, configData.globalScale, configData.globalPow),\n                //     degree: e.degree,\n                //     dist: e.dist,\n                //     leave: e.leave,\n                //     pos: e.pos,\n                // }\n                //triggerSound(d);\n                emitOSC('/gps/trigger', d2);\n            }\n            lastTrigger = e;\n        }\n\n        p.push()\n        let dist = e.pos.mag()\n\n        //draw line\n        if (dist < p.width * 2){\n            p.noFill()\n            p.beginShape()\n            for(var o=0; o < dist-10; o+=2){\n                let useAngle = dataDegree + p.noise(p.frameCount/10+ o/10)/60\n                p.vertex(Math.cos(useAngle)*o, Math.sin(useAngle)*o)\n                // line(o,o,a.pos.x*0.95,a.pos.y*0.95)\n            }\n            p.endShape()\n        }\n        p.pop()\n                \n        let scanAfter = Math.abs(angleDelta % (Math.PI*2) ) < 0.08 && angleDelta < 0\n        if (scanAfter){\n            \n            p.push()\n                p.fill(0,0,0,70)\n                p.noStroke()\n                p.rect(e.pos.x+6,e.pos.y-5, p.textWidth(nowId)+8,12)\n                p.fill(255)\n                p.text(nowId, e.pos.x+10, e.pos.y+5)\n            p.pop()\n        }\n           \n        if (!scanned){\n            p.fill(255, 5+150/Math.log(timeDelta) + (scanAfter ? 50 : 0))  \n        } else{\n            p.fill(255)\n        }\n        \n        //繪製正在線上的點\n        let useR = 5 + (angleDelta<0?Math.max(Math.min(-1/(angleDelta),6),0):0) + p.noise(eid, p.frameCount, e.lon)*2\n\n        if (!e.leave){\n            p.fill(255,0,0)\n            //p.text(this.uid, 0, 30)\n            useR= 5+ Math.sin(p.frameCount/10)*2\n            p.push()\n                p.stroke(255,200)\n                p.rectMode(p.CENTER)\n                p.translate(e.pos.x,e.pos.y)\n                p.rotate(p.frameCount/(10+ e.lon/100))\n                p.noFill()\n                p.rect(0,0,12,12)\n            p.pop()\n            p.text(`//ACTIVE ${(p.frameCount % 10 <5?\".\":\"\")}\\nID: ${nowId}`, \n                e.pos.x+10, e.pos.y+20)\n        }\n        p.ellipse(e.pos.x, e.pos.y, useR, useR)\n      })\n}\n\nfunction calcR(i, globalScale, globalPow) {\n    return Math.pow(Math.abs(i * globalScale / 10), globalPow)*0.5;\n}\n\nfunction calcReverseR(dist, globalScale, globalPow) {\n    return Math.pow(dist/0.25, 1/globalPow)*10/globalScale;\n  //return Math.ceil(Math.pow(dist/0.25, 1/globalPow)*10/globalScale);\n}\n\nfunction drawCircle(p, rDistArr) {\n    let frameCount = p.frameCount;\n    p.noFill();\n    for(let i=0;i<50;i++){\n        //let r = Math.pow(Math.abs(i * globalScale / 10), globalPow) * 0.5\n        let r = 0;\n        if (rDistArr.length > i) r = rDistArr[i];\n        //else r = calcR(i, globalScale, globalPow);\n        p.stroke(255, Math.max(60-i/10*60,4) + Math.sin(-frameCount/10+i)*4)\n        if (i<9){\n            p.fill(255,255,255,1 + p.noise(frameCount/10,i)*1)\n            p.stroke(255,20)\n            p.beginShape(p.LINES)\n    \n            for(let o=0; o<360; o++){\n                let useR = calcWaveR(r, frameCount, i, o, 50/(10-i));\n                p.vertex(useR*Math.cos(p.radians(o+frameCount/40)),useR*Math.sin(p.radians(o+frameCount/40)) )\n            }\n            p.endShape()\n          \n            p.noStroke()\n            //用 close 填內容色\n            p.beginShape()\n            for(let o=0;o<360;o++){\n                let useR = calcWaveR(r, frameCount, i, o, 30/(8-i));\n                p.vertex(useR*Math.cos(p.radians(o+frameCount/40)),useR*Math.sin(p.radians(o+frameCount/40)) )\n            }\n            p.endShape(p.CLOSE)\n\n        } else{\n            p.noFill()\n            p.ellipse(0,0,r,r)\n\n        }\n    }  \n}\n\nfunction drawText(p, text) {\n    //Draw Date Text \n    p.push();\n    p.fill(255);\n    p.textSize(14);\n    p.textLeading(24);\n    p.text(new Date(), 20, p.height-35);\n    p.pop();\n\n    //Show Number of Person\n    //TODO: Calculate Person\n    p.push();\n        p.fill(255,130);\n        p.text(text, 20, 35);\n        //p.text(\"Total Nodes: \"+calcPerson() + \"\\nActive: \" + allActiveCount + \"\\nExecute Time: \" + frameCount+\"\\nScanning: \"+parseFloat( radioDeg/PI*180).toFixed(2)+\"°\", 20, 35)\n    p.pop();\n}\n\nfunction calcWaveR(r, frameCount, i, o, mult) {\n    return r/2 + Math.sin(frameCount/(10+i*10)+o/360*2*Math.PI*10)*mult;\n}\n\nfunction calcDeg(radioSpeed, frameCount) {\n    return (radioSpeed * frameCount / 60) % (2*Math.PI) - Math.PI;\n}\n\nfunction getPos(p, configData, obj){\n\n    if (obj.lon && obj.lat){\n      let lon = (obj.lon-configData.lon)*configData.globalScale\n      let lat = (obj.lat-configData.lat)*configData.globalScale\n      let result= p.createVector(lon,lat)\n      result.x = (result.x>0?1:-1)* Math.pow(Math.abs(result.x),configData.globalPow)\n      result.y =  (result.y>0?1:-1)* Math.pow(Math.abs(result.y),configData.globalPow)\n      result.y*=-1\n      return result\n    } \n    return null\n}\n\nfunction calcPerson(dataPoint) {\n    return dataPoint.length;\n}\n\nfunction calcActive(dataPoint) {\n    return dataPoint.filter(e => !e.leave).length;\n}","import * as firebase from 'firebase';\nimport {firebaseConfig} from './config';\n//copy firebaseConfig from firebase website\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nconst databaseRef = firebase.database().ref();\nexport const earthLocRef = databaseRef.child('earthlocations');","import React, {Component} from 'react';\nimport P5Wrapper from 'react-p5-wrapper';\nimport sketch from './sketch';\nimport {earthLocRef} from './firebase';\nimport * as dat from 'dat.gui';\nimport {useInterval} from './tool';\n\nconst SESSION_ID = 'generative_geo_id';\nconst SESSION_NAME = 'generative_name';\nconst SESSION_TIME = 'generative_geo_id_time';\n\nclass LocData extends Component {\n    state = {\n        gp: {},\n        gpsPermission: null,\n        first: true,\n        key: null,\n        allLocations: [],\n        dataPoint: []\n    }\n\n    componentDidMount() {\n        setInterval(()=>{this.checkData(this.state.allLocations)}, 10000);\n        //useInterval();\n        earthLocRef.on('value', (snapshot) => {\n            //if (!this.state.listen) return;\n            //console.log(snapshot.val());\n            // this.setState({\n            //     allLocations: snapshot.val()\n            // });\n            //getAll();\n            this.updateDataSet(snapshot.val());\n        });\n    }\n\n    updateDataSet = (allLocations) => {\n        this.checkData(allLocations);\n        this.setState({\n            allLocations: allLocations,\n            // dataPoint: Object.entries(this.state.allLocations).map(d => \n            dataPoint: Object.entries(allLocations).map(d => \n                ({...d[1], key: d[0]}))\n\n        })\n        \n    }\n\n    checkData = (allLocations) => {\n        //should be removed....\n        Object.entries(allLocations).forEach((e)=>{\n            //如果沒有 key 補上\n            if (!('key' in e[1])) {\n                earthLocRef.child(e[0]).child('key').set(e[0]);\n            }\n            //如果沒有 showId 補上\n            if ((!('showId' in e[1]) || !e[1].showId) && e[0] ){\n                earthLocRef.child(e[0]).child(\"showId\").set(getShowId(e[0]))\n            }\n            //如果沒有時間戳或位置資料，移除該資料\n            if (!e[1].timeStamp || !e[1].lat || !e[1].lon){\n                earthLocRef.child(e[0]).remove()\n            } else { //check offline\n                let timeDelta = Date.now()-e[1].timeStamp\n                //如果已離線>6秒，設定為離線\n                if (timeDelta > 6000){\n                    if (!e[1].leave){\n                        earthLocRef.child(e[0]).child('leave').set(true)\n                    }\n                } \n                // else{\n                //     //如果沒有，設定為活躍\n                //     if (e[1].leave){\n                //         earthLocRef.child(e[0]).child('leave').set(false)    \n                //     }\n                // }\n            }\n        })\n    }\n\n    render() {\n        return (<>\n            <ControlPanel dataPoint={this.state.dataPoint}/>\n            </>\n        );\n    }\n}\n\nclass ControlPanel extends Component {\n    state = {\n        data: {\n            globalScale: 250000,\n            globalPow: 0.58,\n            maxLineLength: 2000,\n            radioSpeed: 0.5/2*Math.PI,\n            lat: 24.14,\n            lon: 120.66,\n            centerName: 'NTMoFA'\n        }, \n        GUI: new dat.GUI()\n    }\n\n    componentDidMount() {\n        let dataStore = sessionStorage.getItem('controlData');\n        console.log(dataStore);\n        let {data, GUI} = this.state;\n        if (dataStore) {\n        data = JSON.parse(dataStore);\n            this.setState({\n                data: data\n            })\n        } \n        const btn = {'add config': this.saveControlData};\n        GUI.add(data,\"globalScale\",1000,800000)\n        GUI.add(data,\"globalPow\",0,0.99)\n        GUI.add(data,\"maxLineLength\")\n        GUI.add(data,'radioSpeed',0,3,0.01)\n        GUI.add(data,'centerName')\n        GUI.add(data,'lat',-90,90,0.01)\n        GUI.add(data,'lon',-180,180,0.01)\n        GUI.add(btn, 'add config');\n\n        GUI.close()\n    }\n    \n    saveControlData = () => {\n        let {data} = this.state;\n        sessionStorage.setItem('controlData', JSON.stringify({...data}));\n    }\n\n    render() {\n        const {data} = this.state;\n        let {dataPoint} = this.props;\n\n        return (\n            <>\n            <P5Wrapper sketch={sketch} dataPoint={dataPoint}\n                    configData={data}/>\n            </>\n        )\n\n\n    }\n\n}\n\nconst getShowId = (id) => {\n    return \"A\" + (id.split(\"\").map(ch=>ch.charCodeAt(0)).reduce((a,b)=>(a*b),1) % 1000)\n  }\n\nexport default LocData;","import React from 'react';\nimport LocData from './ControlPanel';\nimport './App.css';\n\n\nclass App extends React.Component {\n  \n  render() {\n    return (\n      <LocData/>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/C3_mid_long_44.1k.07d4d97c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/C2_low_short_44.1k.9d4cbcaa.mp3\";"],"sourceRoot":""}